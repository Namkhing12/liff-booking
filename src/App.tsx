import { useEffect, useState } from 'react'
import { supabase } from './supabaseClient'
import { initLiff } from './liffInit'
import liff from '@line/liff'
import './App.css'

function App() {
  const [name, setName] = useState('')
  const [idCard, setIdCard] = useState('')
  const [phone, setPhone] = useState('')
  const [date, setDate] = useState('')
  const [time, setTime] = useState('')
  const [symptom, setSymptom] = useState('')

  useEffect(() => {
    initLiff()
  }, [])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    const profile = await liff.getProfile()
    const lineId = profile.userId

    const { error } = await supabase.from('appointments').insert([
      {
        name,
        id_card: idCard || null,
        phone: phone || null,
        date,
        time,
        symptom,
        line_id: lineId,
      },
    ])

    if (!error) {
      await liff.sendMessages([
        {
          type: 'text',
          text: `‚úÖ ‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\nüë§ ‡∏ä‡∏∑‡πà‡∏≠: ${name}\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${date}\nüïí ‡πÄ‡∏ß‡∏•‡∏≤: ${time}\nüìã ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£: ${symptom}`,
        },
      ])
      liff.closeWindow()
    } else {
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß')
    }
  }

  return (
    <div className="booking-container">
      <div className="form-card">
        <h2>ü©∫ ‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå</h2>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label>üë§ ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</label>
            <input value={name} onChange={(e) => setName(e.target.value)} required />
          </div>
          <div className="form-group">
            <label>üÜî ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö):</label>
            <input value={idCard} onChange={(e) => setIdCard(e.target.value)} />
          </div>
          <div className="form-group">
            <label>üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö):</label>
            <input value={phone} onChange={(e) => setPhone(e.target.value)} />
          </div>
          <div className="form-group">
            <label>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:</label>
            <input type="date" value={date} onChange={(e) => setDate(e.target.value)} required />
          </div>
          <div className="form-group">
            <label>üïí ‡πÄ‡∏ß‡∏•‡∏≤:</label>
            <input type="time" value={time} onChange={(e) => setTime(e.target.value)} required />
          </div>
          <div className="form-group">
            <label>üí¨ ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô:</label>
            <textarea value={symptom} onChange={(e) => setSymptom(e.target.value)} required />
          </div>
          <button className="btn-submit" type="submit">‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</button>
        </form>
      </div>
    </div>
  )
}

export default App
